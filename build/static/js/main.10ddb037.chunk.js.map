{"version":3,"sources":["components/Todo/Todo.module.css","components/Form/Form.module.css","components/Layout/Layout.module.css","components/Header/Header.module.css","components/Header/Header.js","components/Form/Form.js","components/Todo/Todo.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","date","day","Date","getDate","month","getUTCMonth","year","getUTCFullYear","className","styles","Form","state","value","getTodoText","event","target","setState","preventDefault","submitTodo","props","getTodo","onSubmit","this","Input","type","onChange","placeholder","Submit","Component","Todo","completed","push","Completed","join","Text","text","Btns","Edit","id","onClick","complete","bind","Delete","delete","Layout","tasks","addTodo","todo","task","todos","deleteTodo","forEach","splice","completeTodoHandler","nextProps","nextState","map","key","LayoutDiv","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.10ddb037.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"Todo_Todo__3sKJW\",\"Btns\":\"Todo_Btns__1DVv1\",\"Edit\":\"Todo_Edit__3ZsTb\",\"Delete\":\"Todo_Delete__1Xerz\",\"Completed\":\"Todo_Completed__3qzHp\",\"Text\":\"Todo_Text__1luEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__y9U31\",\"Input\":\"Form_Input__1Movh\",\"Submit\":\"Form_Submit__2hdbY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3f3QQ\",\"LayoutDiv\":\"Layout_LayoutDiv__2Aq1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__29Bes\",\"Date\":\"Header_Date__3FcDp\"};","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nfunction Header() {\r\n    let date;\r\n    let day = new Date().getDate();\r\n    let month = new Date().getUTCMonth();\r\n    let year = new Date().getUTCFullYear();\r\n    \r\n    switch(day){\r\n        case 0:\r\n            day = 'Sunday';\r\n            break;\r\n        case 1:\r\n            day = 'Monday';\r\n            break;\r\n        case 2:\r\n            day = 'Tuesday';\r\n            break;\r\n        case 3:\r\n            day = 'Wednesday';\r\n            break;\r\n        case 4:\r\n            day = 'Thursday';\r\n            break;\r\n        case 5:\r\n            day = 'Friday';\r\n            break;\r\n        case 6:\r\n            day = 'Saturday';\r\n            break;\r\n        default: \r\n            day = 'Invalid'\r\n            break;\r\n    }\r\n    \r\n    switch(month){\r\n        case 0:\r\n        month = 'January';\r\n            break;\r\n        case 1:\r\n        month = 'February';\r\n            break;\r\n        case 2:\r\n        month = 'March';\r\n            break;\r\n        case 3:\r\n        month = 'April';\r\n            break;\r\n        case 4:\r\n        month = 'May';\r\n            break;\r\n        case 5:\r\n        month = 'June';\r\n            break;\r\n        case 6:\r\n        month = 'July';\r\n            break;\r\n        case 7:\r\n        month = 'August';\r\n            break;\r\n        case 8:\r\n        month = 'September';\r\n            break;\r\n        case 9:\r\n        month = 'October';\r\n            break;\r\n        case 10:\r\n        month = 'November';\r\n            break;\r\n        case 11:\r\n        month = 'December';\r\n            break;\r\n        default: \r\n        month = 'Invalid'\r\n            break;\r\n    }\r\n\r\n    date = `${day}, ${month} ${year}`\r\n\r\n    return(\r\n        <div>\r\n            <h1 className={styles.Header}>My Todos</h1>\r\n            <h2 className={styles.Date}>{date}</h2>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport styles from './Form.module.css'\r\n\r\nclass Form extends Component{\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    getTodoText = (event) => {\r\n        if(event.target.value !== null){\r\n            this.setState({ value: event.target.value})\r\n        }\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    submitTodo = (event) => {\r\n        event.preventDefault();\r\n        if(this.state.value !== ''){\r\n            this.props.getTodo(this.state.value)\r\n        }\r\n\r\n        this.setState({ value: '' })\r\n\r\n    } \r\n\r\n    render(){\r\n        return (\r\n            <form className={styles.Form} onSubmit={this.submitTodo} >\r\n                <input \r\n                    className={styles.Input} \r\n                    type=\"text\" \r\n                    onChange={this.getTodoText}\r\n                    value={this.state.value} \r\n                    placeholder=\"Enter task\"/>\r\n                <input \r\n                    className={styles.Submit}\r\n                    type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport styles from './Todo.module.css'\r\n\r\nfunction Todo(props) {\r\n    let completed = [styles.Todo];\r\n    if(props.completed){\r\n        completed.push(styles.Completed);\r\n    }\r\n\r\n    return (\r\n        <div className={completed.join(' ')}>\r\n            <h4 className={styles.Text}>{props.text}</h4>\r\n            <div className={styles.Btns}>\r\n                <p className={styles.Edit} id={props.id} onClick={props.complete.bind(this, (props.id))}>Complete</p>\r\n                <p className={styles.Delete} id={props.id} onClick={props.delete.bind(this, (props.id))}>Delete</p>\r\n            </div>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport styles from './Layout.module.css';\r\nimport Header from '../Header/Header';\r\nimport Form from '../Form/Form';\r\nimport Todo from '../Todo/Todo';\r\n\r\nclass Layout extends Component{\r\n    state = {\r\n        tasks: []\r\n    }\r\n\r\n    \r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.state.tasks !== nextState.tasks) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    addTodo = (value) => {\r\n        if(value !== null){\r\n            const todo = {\r\n                task: value,\r\n                completed: false\r\n            }\r\n    \r\n            const todos = [ ...this.state.tasks];\r\n            todos.push(todo);\r\n            this.setState({ tasks: todos });\r\n        }\r\n    }\r\n\r\n    \r\n    deleteTodo = (event) => {\r\n        let todos = [ ...this.state.tasks];\r\n        todos.forEach((todo, id) => {\r\n            if(event === id){\r\n                todos.splice(id, 1);\r\n                this.setState({ tasks: todos });\r\n            }\r\n        })\r\n    }\r\n\r\n    completeTodoHandler = (event) => {\r\n        let todos = [ ...this.state.tasks];\r\n        todos.forEach((todo, id) => {\r\n            if(event === id){\r\n                todo.completed = true;\r\n                this.setState({ tasks: todos });\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const todos =  this.state.tasks.map((todo, id) => {\r\n            return <Todo \r\n                        key={id} \r\n                        text={todo.task}   \r\n                        id={id}\r\n                        completed={todo.completed}\r\n                        complete={this.completeTodoHandler}\r\n                        delete={this.deleteTodo}/>\r\n        })\r\n        \r\n       \r\n        return(\r\n            <div className={styles.Layout}>\r\n                <div className={styles.LayoutDiv}>\r\n                    <Header/>\r\n                    <Form getTodo={this.addTodo}/>\r\n                    { todos }\r\n                </div>\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\n\nclass App extends Component{\n  render(){\n    return (\n      <div className=\"App\">\n        <Layout/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}